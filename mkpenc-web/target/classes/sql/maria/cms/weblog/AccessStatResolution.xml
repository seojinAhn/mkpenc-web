<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onmakers.cms.module.weblog.accessstat.resolution.mapper.AccessStatResolutionMapper">
	
	<resultMap id="accessStatResolutionSummary-result" type="AccessStatResolutionSummary">
		<result property="maxResolutionPc" column="MAX_RESOLUTION_P" />
		<result property="maxResolutionRatePc" column="MAX_RESOLUTION_RATE_P" />
		<result property="maxResolutionMobile" column="MAX_RESOLUTION_M" />
		<result property="maxResolutionRateMobile" column="MAX_RESOLUTION_RATE_M" />
	</resultMap>
	
	<resultMap id="accessStatResolution-result" type="AccessStatResolution">
		<result property="sttsDt" column="STTS_DT" />
		<result property="vsitCnt" column="VSIT_CNT" />
		<result property="vsitCnt1" column="VSIT_CNT_1" />
		<result property="vsitCnt2" column="VSIT_CNT_2" />
		<result property="vsitCnt3" column="VSIT_CNT_3" />
		<result property="vsitCnt4" column="VSIT_CNT_4" />
		<result property="vsitCnt5" column="VSIT_CNT_5" />
		<result property="vsitCnt6" column="VSIT_CNT_6" />
		<result property="vsitCnt7" column="VSIT_CNT_7" />
	</resultMap>
	
	<sql id="selectAccessStatResolutionListWhere-fragment">
		<where>
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(startDate)">
				STTS_DT <![CDATA[ >= ]]> #{startDate}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(endDate)">
				AND STTS_DT <![CDATA[ <= ]]> #{endDate}
			</if>
		</where>
	</sql>
	
	<sql id="selectAccessStatResolutionListAnd-fragment">
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(startDate)">
			AND STTS_DT <![CDATA[ >= ]]> #{startDate}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(endDate)">
			AND STTS_DT <![CDATA[ <= ]]> #{endDate}
		</if>
	</sql>
	
	<select id="selectAccessStatResolutionSummary" parameterType="SearchAccessStatResolution" resultMap="accessStatResolutionSummary-result">
		SELECT /*+USE_NL(A B)*/
			IFNULL(MAX_RESOLUTION_P, 'NONE') AS MAX_RESOLUTION_P
			, IFNULL(ROUND(IF(SUM_VSIT_CNT_P = 0, 0, IFNULL(VSIT_CNT_P, 0) / SUM_VSIT_CNT_P), 4), 0) * 100 AS MAX_RESOLUTION_RATE_P
			, IFNULL(MAX_RESOLUTION_M, 'NONE') AS MAX_RESOLUTION_M
			, IFNULL(ROUND(IF(SUM_VSIT_CNT_M = 0, 0, IFNULL(VSIT_CNT_M, 0) / SUM_VSIT_CNT_M), 4), 0) * 100 AS MAX_RESOLUTION_RATE_M
		FROM 
			(
				SELECT
					MAX_RESOLUTION_P
					, VSIT_CNT_P
					, SUM_VSIT_CNT_P
				FROM (
					SELECT /*+INDEX_DESC(T1)*/
						RESOLUTION AS MAX_RESOLUTION_P
						, SUM(VSIT_CNT) AS VSIT_CNT_P
						, (
							SELECT /*+INDEX_DESC(ST1)*/
								SUM(VSIT_CNT) AS SUM_VSIT_CNT_P
							FROM
								TB_ACSS_STTS_RESOLUTION ST1
							WHERE DEVICE_DIVN = 'pc'
							<include refid="selectAccessStatResolutionListAnd-fragment" />
						) AS SUM_VSIT_CNT_P
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE DEVICE_DIVN = 'pc'
					<include refid="selectAccessStatResolutionListAnd-fragment" />
					GROUP BY RESOLUTION
					ORDER BY VSIT_CNT_P DESC
					LIMIT 1
				) SA
			) A
			LEFT OUTER JOIN
			(
				SELECT
					MAX_RESOLUTION_M
					, VSIT_CNT_M
					, SUM_VSIT_CNT_M
				FROM (
					SELECT /*+INDEX_DESC(T1)*/
						RESOLUTION AS MAX_RESOLUTION_M
						, SUM(VSIT_CNT) AS VSIT_CNT_M
						, (
							SELECT /*+INDEX_DESC(ST1)*/
  								SUM(VSIT_CNT) AS SUM_VSIT_CNT_M
							FROM
								TB_ACSS_STTS_RESOLUTION ST1
							WHERE DEVICE_DIVN = 'mobile'
							<include refid="selectAccessStatResolutionListAnd-fragment" />
						) AS SUM_VSIT_CNT_M
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE DEVICE_DIVN = 'mobile'
					<include refid="selectAccessStatResolutionListAnd-fragment" />
					GROUP BY RESOLUTION
					ORDER BY VSIT_CNT_M DESC   
					LIMIT 1
				) SB
			) B
			ON 1 = 1
	</select>
	
	<select id="selectAccessStatResolutionListCount" parameterType="SearchAccessStatResolution" resultType="integer">
		SELECT COUNT(*) FROM (
			SELECT
				COUNT(*)
			FROM 
				TB_ACSS_STTS_RESOLUTION T1
			<include refid="selectAccessStatResolutionListWhere-fragment" />
			GROUP BY STTS_DT
		) RS
	</select>
	
	<select id="selectAccessStatResolutionList" parameterType="SearchAccessStatResolution" resultMap="accessStatResolution-result">
		SELECT * FROM (
			SELECT /*+USE_NL(A B C D E F G H)*/
				A.STTS_DT,
				IFNULL(A.VSIT_CNT, 0) AS VSIT_CNT,
				IFNULL(B.VSIT_CNT_1, 0) AS VSIT_CNT_1,
				IFNULL(C.VSIT_CNT_2, 0) AS VSIT_CNT_2,
				IFNULL(D.VSIT_CNT_3, 0) AS VSIT_CNT_3,
				IFNULL(E.VSIT_CNT_4, 0) AS VSIT_CNT_4,
				IFNULL(F.VSIT_CNT_5, 0) AS VSIT_CNT_5,
				IFNULL(G.VSIT_CNT_6, 0) AS VSIT_CNT_6,
				IFNULL(H.VSIT_CNT_7, 0) AS VSIT_CNT_7
			FROM
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) A
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_1
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[0]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) B
				ON A.STTS_DT = B.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_2
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[1]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) C
				ON A.STTS_DT = C.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_3
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[2]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) D
				ON A.STTS_DT = D.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_4
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[3]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) E
				ON A.STTS_DT = E.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_5
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[4]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) F
				ON A.STTS_DT = F.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_6
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION = #{resolutionRowList[5]}
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) G
				ON A.STTS_DT = G.STTS_DT
				LEFT OUTER JOIN
				(
					SELECT /*+INDEX_DESC(T1)*/
						STTS_DT,
						SUM(VSIT_CNT) AS VSIT_CNT_7
					FROM
						TB_ACSS_STTS_RESOLUTION T1
					WHERE RESOLUTION NOT IN (
						<foreach collection="resolutionRowList" separator="," item="resolutionRow">
							#{resolutionRow}
						</foreach>
					)
					GROUP BY STTS_DT
					ORDER BY STTS_DT DESC
				) H
				ON A.STTS_DT = H.STTS_DT
		) RS
		<include refid="selectAccessStatResolutionListWhere-fragment" />
		LIMIT #{pageOffset}, #{pageSize}
	</select>
	
	<select id="selectResolutionRowList" parameterType="SearchAccessStatResolution" resultType="string">
		SELECT RESOLUTION FROM (
			SELECT /*+INDEX_DESC(T1)*/
				RESOLUTION,
				SUM(VSIT_CNT) AS VSIT_CNT
			FROM
				TB_ACSS_STTS_RESOLUTION T1
			WHERE RESOLUTION <![CDATA[ <> ]]> 'unknown'
			<include refid="selectAccessStatResolutionListAnd-fragment" />
			GROUP BY RESOLUTION
			ORDER BY VSIT_CNT DESC
		) RS
		LIMIT 6
	</select>
</mapper>