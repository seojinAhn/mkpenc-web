<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onmakers.tdms.module.equipment.mapper.RequestMapper">
    <select id="selectReqNo" parameterType="String" resultType="String">
        SELECT CONCAT(#{seqName}, LPAD(SEQ_VALUE(#{seqName}), 2, '0'))
    </select>

    <select id="selectRequestList" parameterType="SearchEquipment" resultType="Request">
        SELECT
              T1.REQ_NO
            , T1.REQ_DATETIME
            , T1.TEST_TYPE_CD
            , T1.TEST_CD
            , T1.EQUIP_CD
            , T1.CUST_CD
            , T1.COMP_YN
            , T1.TEST_GRP_CD
            , T1.TEST_FROM_DATETIME
            , T1.TEST_TO_DATETIME
            , T1.SAMPLE_NM
            , T1.KATECH_REQ_NO
            , T1.REQ_ORG_CD
            , T1.OPERATOR_ID
            , T1.ANALYSIS_ID
            , T1.TEST_STATUS_CD
            , T1.IS_VALID_YN
            , T1.IS_VIEW_YN
            , T1.REG_ID
            , T1.REG_DT
            , T1.UPT_ID
            , T1.UPT_DT
            , T2.CUST_NM
            , T2.CUST_TYPE1_CD
            , T2.CUST_TYPE2_CD
            , T1.IS_PRIVATE_YN
            , FN_GET_CODE_NM('TESTTYPECD', T1.TEST_TYPE_CD)   TEST_TYPE_CD_NM
            , FN_GET_CODE_NM('TESTCD', T1.TEST_CD)        TEST_CD_NM
            , FN_GET_CODE_NM('EQUIPCD', T1.EQUIP_CD)       EQUIP_CD_NM
            , FN_GET_CODE_NM('TESTGRPCD', T1.TEST_GRP_CD)    TEST_GRP_CD_NM
            , FN_GET_CODE_NM('TESTSTATUSCD', T1.TEST_STATUS_CD) TEST_STATUS_CD_NM
            , FN_GET_CODE_NM('CUSTTYPE1CD', T2.CUST_TYPE1_CD)  CUST_TYPE1_CD_NM
            , FN_GET_CODE_NM('CUSTTYPE2CD', T2.CUST_TYPE2_CD)  CUST_TYPE2_CD_NM
        FROM TDT_TEST_REQ_INFO T1, MST_CUSTOMER T2
        WHERE T1.CUST_CD = T2.CUST_CD AND T1.IS_VALID_YN = 'Y'
        <if test="!isAdminRole">
          AND (T1.IS_PRIVATE_YN = 'N' OR (T1.IS_PRIVATE_YN = 'Y' AND (T1.REG_ID = #{memberId} OR T1.ANALYSIS_ID = #{memberId} OR T1.OPERATOR_ID = #{memberId})))
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchReqNo)">
            AND T1.REQ_NO = #{searchReqNo}
        </if>
        <if test="searchTestCd != null">
            AND T1.TEST_CD = #{searchTestCd}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchCustType1)">
            AND T2.CUST_TYPE1_CD = #{searchCustType1}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchTestType)">
            AND T1.TEST_TYPE_CD = #{searchTestType}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchTestGroup)">
            AND T1.TEST_GRP_CD = #{searchTestGroup}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStartDt)">
            AND T1.REQ_DATETIME >= REPLACE(#{searchStartDt}, '-', '')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchEndDt)">
            AND T1.REQ_DATETIME &lt;= REPLACE(#{searchEndDt}, '-', '')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchText)">
            AND LOWER(T1.SAMPLE_NM) LIKE CONCAT('%', LOWER(#{searchText}), '%')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchReqText)">
            AND LOWER(T1.REQ_NO) LIKE CONCAT('%', LOWER(#{searchReqText}), '%')
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchStatus)">
            AND T1.TEST_STATUS_CD = #{searchStatus}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(searchKatechReqNo)">
            AND T1.KATECH_REQ_NO = #{searchKatechReqNo}
        </if>
    </select>

    <select id="selectRequest" parameterType="SearchEquipment" resultType="Request">
        SELECT
              T1.REQ_NO
            , T1.REQ_DATETIME
            , T1.TEST_TYPE_CD
            , T1.TEST_CD
            , T1.EQUIP_CD
            , T1.CUST_CD
            , T1.COMP_YN
            , T1.TEST_GRP_CD
            , T1.TEST_FROM_DATETIME
            , T1.TEST_TO_DATETIME
            , T1.SAMPLE_NM
            , T1.KATECH_REQ_NO
            , T1.REQ_ORG_CD
            , T1.OPERATOR_ID
            , T1.ANALYSIS_ID
            , T1.TEST_STATUS_CD
            , T1.IS_VALID_YN
            , T1.IS_VIEW_YN
            , T1.REG_ID
            , T1.REG_DT
            , T1.UPT_ID
            , T1.UPT_DT
            , T2.CUST_NM
            , T2.CUST_TYPE1_CD
            , T2.CUST_TYPE2_CD
            , T1.IS_PRIVATE_YN
            , FN_GET_CODE_NM('TESTTYPECD', T1.TEST_TYPE_CD)   TEST_TYPE_CD_NM
            , FN_GET_CODE_NM('TESTCD', T1.TEST_CD)        TEST_CD_NM
            , FN_GET_CODE_NM('TESTGRPCD', T1.TEST_GRP_CD)    TEST_GRP_CD_NM
            , FN_GET_CODE_NM('TESTSTATUSCD', T1.TEST_STATUS_CD) TEST_STATUS_CD_NM
            , FN_GET_CODE_NM('CUSTTYPE1CD', T2.CUST_TYPE1_CD)  CUST_TYPE1_CD_NM
            , FN_GET_CODE_NM('CUSTTYPE2CD', T2.CUST_TYPE2_CD)  CUST_TYPE2_CD_NM
            , (SELECT ST1.MEMBER_NAME FROM CMS_MEMBER ST1 WHERE ST1.MEMBER_ID = T1.OPERATOR_ID) OPERATOR_NM
            , (SELECT ST1.MEMBER_NAME FROM CMS_MEMBER ST1 WHERE ST1.MEMBER_ID = T1.ANALYSIS_ID) ANALYSIS_NM
            , (SELECT FN_GET_CODE_NM('AUSDPTCD', ST1.AUS_DPT_CD) FROM CMS_MEMBER ST1 WHERE ST1.MEMBER_ID = T1.REG_ID) AUS_DPT_CD_NM
            , (SELECT ST1.EQUIP_NM FROM MST_EQUIPMENT ST1 WHERE ST1.EQUIP_CD = T1.EQUIP_CD) EQUIP_CD_NM
        FROM TDT_TEST_REQ_INFO T1, MST_CUSTOMER T2
        WHERE T1.CUST_CD = T2.CUST_CD
        <if test="!isAdminRole">
            AND (T1.IS_PRIVATE_YN = 'N' OR (T1.IS_PRIVATE_YN = 'Y' AND (T1.REG_ID = #{memberId} OR T1.ANALYSIS_ID = #{memberId} OR T1.OPERATOR_ID = #{memberId})))
        </if>
            AND T1.REQ_NO = #{searchReqNo}
    </select>


    <insert id="insertRequest" parameterType="Request">
        INSERT INTO TDT_TEST_REQ_INFO (
              REQ_NO
            , REQ_DATETIME
            , TEST_TYPE_CD
            , TEST_CD
            , EQUIP_CD
            , CUST_CD
            , COMP_YN
            , TEST_GRP_CD
            , TEST_FROM_DATETIME
            , TEST_TO_DATETIME
            , SAMPLE_NM
            , KATECH_REQ_NO
            , REQ_ORG_CD
            , OPERATOR_ID
            , ANALYSIS_ID
            , TEST_STATUS_CD
            , IS_VALID_YN
            , IS_VIEW_YN
            , REG_ID
            , REG_DT
            , IS_PRIVATE_YN
        ) VALUES (
              #{reqNo}
            , REPLACE(#{reqDatetime}, '-', '')
            , #{testTypeCd}
            , #{testCd}
            , #{equipCd}
            , #{custCd}
            , #{compYn}
            , #{testGrpCd}
            , REPLACE(#{testFromDatetime}, '-', '')
            , REPLACE(#{testToDatetime}, '-', '')
            , #{sampleNm}
            , #{katechReqNo}
            , #{reqOrgCd}
            , #{operatorId}
            , #{analysisId}
            , #{testStatusCd}
            , 'Y'
            , 'Y'
            , #{regId}
            , NOW()
            , #{isPrivateYn}
        )
    </insert>

    <update id="updateRequest" parameterType="Request">
        UPDATE TDT_TEST_REQ_INFO SET
          REQ_DATETIME = REPLACE(#{reqDatetime}, '-', '')
        , TEST_TYPE_CD = #{testTypeCd}
        , TEST_CD = #{testCd}
        , EQUIP_CD = #{equipCd}
        , CUST_CD = #{custCd}
        , COMP_YN = #{compYn}
        , TEST_GRP_CD = #{testGrpCd}
        , TEST_FROM_DATETIME = REPLACE(#{testFromDatetime}, '-', '')
        , TEST_TO_DATETIME = REPLACE(#{testToDatetime}, '-', '')
        , SAMPLE_NM = #{sampleNm}
        , KATECH_REQ_NO = #{katechReqNo}
        , REQ_ORG_CD = #{reqOrgCd}
        , OPERATOR_ID = #{operatorId}
        , ANALYSIS_ID = #{analysisId}
        , TEST_STATUS_CD = #{testStatusCd}
        , UPT_ID = #{uptId}
        , UPT_DT = NOW()
        , IS_PRIVATE_YN = #{isPrivateYn}
        WHERE REQ_NO = #{reqNo}
    </update>

    <update id="updateRequestStatus" parameterType="Request">
        UPDATE TDT_TEST_REQ_INFO SET TEST_STATUS_CD = #{testStatusCd}
        WHERE REQ_NO = #{reqNo}
    </update>

    <delete id="deleteRequest" parameterType="String">
        DELETE FROM TDT_TEST_REQ_INFO
        WHERE REQ_NO = #{reqNo}
    </delete>

    <delete id="deleteRequestByKatechReqNo" parameterType="String">
        DELETE FROM TDT_TEST_REQ_INFO
        WHERE KATECH_REQ_NO = #{katechReqNo}
    </delete>

    <delete id="deleteReqRevInfo" parameterType="String" >
        DELETE FROM TDT_TEST_REQ_REV_INFO
        WHERE REQ_NO = #{reqNo}
    </delete>
</mapper>
